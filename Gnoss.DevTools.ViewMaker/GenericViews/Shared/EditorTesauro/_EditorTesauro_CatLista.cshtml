@model ThesaurusEditorModel
@*
Descripción
-----------------------------------------------
Vista parcial que se utilizará para mostrar las categorías del tesauro en modo Lista. 
Esta vista se utiliza en la vista que la contiene, como es EditorTesauro, dentro de EditarRecurso

Variables
----------------------------------------------------------------
*@
@{


}

@*
----------------------------------------------------------------
-------------------- Vista parcial de mostrar categorias Tesauro en modo Lista --------------------
*@

@* Listado de Categorías en formato "Lista" *@
<div class="tab-pane fade"
     id="ver-lista"
     role="tabpanel"
     aria-labelledby="ver-lista-tab">
    <div class="divTesLista divCategorias clearfix">
        @* Buscador-Filtrador de Categorías*@
        <div class="buscador-categorias">
            <div class="form-group">
                <input class="filtroRapido form-control not-outline"
                       placeholder="@Html.GetText("COMMON","BUSCAR")"
                       type="text"
                       onkeydown="javascript:if(event.which || event.keyCode){if ((event.which == 13) || (event.keyCode == 13)) {return false;}}"
                       onkeyup="javascript:MVCFiltrarListaSelCat(this, 'ver-lista');" />                
            </div>
        </div>
        <div id="divSelCatLista">
        @* Cada Item de Categoría *@
            @foreach (CategoryModel categoria in Model.ThesaurusCategories.OrderBy(cat => cat.Name)) 
            { 
                @* Contenedor de la categoria en formato Lista *@
                <div class="categoria-wrap">
                    <div class="categoria @categoria.Key">
                    @{                        
                        string accionClick = "MVCMarcarElementoSelCat(this, 'panel_hackCatTesSel', 'txtHackCatTesSel');";
                        string cadenaChecked = "";
                        string cadenaDisabled = "";

                        if (Model.SelectedCategories.Contains(categoria.Key))
                        {
                            cadenaChecked = "checked=\"checked\"";
                        }

                        if (Model.DisabledCategories != null && Model.DisabledCategories.Contains(categoria.Key))
                        {
                            cadenaDisabled = "disabled=\"disabled\"";
                        }
                    }
                        @* Mostrar o pintar el input y el título de la categoría correspondiente*@
                        <div class="custom-control custom-checkbox themed little primary">
                            <input type="checkbox"
                                   id="list_@categoria.Key"
                                   onclick="@accionClick" @cadenaChecked @cadenaDisabled
                                   data-item="@categoria.Key"
                                   class="custom-control-input" />
                            <label class="custom-control-label"
                                   for="list_@categoria.Key">@categoria.Name</label>
                        </div>
                    </div> 
                </div>
            } 
         </div>
    </div>
</div>
