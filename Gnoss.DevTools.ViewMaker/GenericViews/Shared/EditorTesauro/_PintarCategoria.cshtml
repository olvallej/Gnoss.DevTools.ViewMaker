@model PintarCategoriaEditorTesauro

@{
    bool esCategoriaCompartida = false;
    if (Model.thesaurusEditor.SharedCategories != null && Model.thesaurusEditor.SharedCategories.Contains(Model.categoryModel.Key))
    {
        esCategoriaCompartida = true;
    }

    @* Comprobar si dispone de hijos la categoría actual *@
    bool tieneHijos = !esCategoriaCompartida && ((List<CategoryModel>)Model.thesaurusEditor.ThesaurusCategories).Count(cat => cat.ParentCategoryKey == Model.categoryModel.Key) > 0;

    @* Hay subcategorías (Hijos): Pintar el + para desplegar *@
    if (tieneHijos)
    {
        //<img style="border-width:0px;margin-right:5px;cursor:pointer;" src="@Html.GetBaseUrlStatic()/img/verMas.gif" onclick="javascript:MVCDesplegarTreeView(this);" />
    }
    @* No Hay subcategorías (Hijos): No pintar para desplegar *@
    else
    {
        //<img style="border-width:0px;" src="@Html.GetBaseUrlStatic()/img/miniWhiteSpace.gif" />
    }

    @* Mostrar o pintar la categoría*@
    <div class="categoria-wrap">
        <div class="categoria @Model.categoryModel.Key">
            @{
                string accionClick = "MVCMarcarElementoSelCat(this, 'panel_hackCatTesSel', 'txtHackCatTesSel');";
                string cadenaChecked = "";
                string cadenaDisabled = "";

                if (Model.thesaurusEditor.SelectedCategories.Contains(Model.categoryModel.Key))
                {
                    cadenaChecked = "checked=\"checked\"";
                }

                if (Model.thesaurusEditor.DisabledCategories != null && Model.thesaurusEditor.DisabledCategories.Contains(Model.categoryModel.Key))
                {
                    cadenaDisabled = "disabled=\"disabled\"";
                    accionClick = "";
                }

            }
            @* Mostrar o pintar el input y el título de la categoría correspondiente*@
            <div class="custom-control custom-checkbox themed little primary">
                <input type="checkbox"
                       id="arb_@Model.categoryModel.Key"
                       onclick="@accionClick" @cadenaChecked @cadenaDisabled
                       data-item="@Model.categoryModel.Key"
                       class="custom-control-input" />
                <label class="custom-control-label"
                       for="arb_@Model.categoryModel.Key">@Model.categoryModel.Name</label>
                </div>
            </div>
            @if (tieneHijos)
            {
                @* Mostrar opción de desplegar si tiene hijos la categoría*@
                <div class="boton-desplegar">
                    <span class="material-icons">keyboard_arrow_down</span>
                </div>
                @* Mostrar o no el panel de los hijos (subcategorías) si esta categoría dispone de subcategorías*@
                <div class="panHijos">
                    @foreach (CategoryModel categoria in ((List<CategoryModel>)Model.thesaurusEditor.ThesaurusCategories).Where(cat => cat.ParentCategoryKey == Model.categoryModel.Key).OrderBy(cat => cat.Order))
                    {
                        PintarCategoriaEditorTesauro pintar = new PintarCategoriaEditorTesauro();
                        pintar.categoryModel = categoria;
                        pintar.thesaurusEditor = Model.thesaurusEditor;
                        @Html.PartialView("../Shared/EditorTesauro/_PintarCategoria", pintar)
                    }
                </div>
            }
        </div>
}