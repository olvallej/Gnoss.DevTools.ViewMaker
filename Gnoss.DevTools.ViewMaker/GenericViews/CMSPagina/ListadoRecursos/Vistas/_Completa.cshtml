@using Es.Riam.Util;
@model ResourceModel
<!--Modificación de la vista, que se mostrará en la página CMS home, para mostrar los recursos de una manera mucho más visual-->
<style>
    .imagen-juego {
        width: 100%;
        max-width: 250px;
        height: 200px;
        object-fit: cover;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.15);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        display: block;
        margin: 0 auto;
    }

        .imagen-juego:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 20px rgba(0,0,0,0.25);
        }

    .listado {
        text-align: center;
        margin-bottom: 20px;
    }
</style>
@if (Model != null)
{    
   <div class="resource" >
        <div class="box description">
            <div class="wrapDescription">           
                @if (Html.GetComunidad().IsCatalog && !string.IsNullOrEmpty(Model.UrlPreview))
                {
                    <div class="group miniaturaListado">
                        <p class="miniatura">
                            <a href="@Model.CompletCardLink">
                                <img width="240px" title="@Model.Title" alt="@Model.Title" src="@Model.UrlPreview" />
                            </a>
                        </p>
                    </div>
                }
                <div class="wrapDescription">
                    
                    <div class="group title">
                        <h2><a href="@Model.CompletCardLink" class="text-muted">@Model.Title</a></h2>
                    </div>

                    <div class="group content">
                        @{
                string claseExtraDescripcion = "";
                if ((Model.ViewSettings != null && ((!Model.MapView && (Model.ViewSettings.ListView.ShowDescription || Model.ViewSettings.MosaicView.ShowDescription)) || (Model.MapView && Model.ViewSettings.MapView.ShowDescription))))
                {
                    if (Model.ViewSettings != null)
                    {
                        if (!Model.ViewSettings.ListView.ShowDescription)
                        {
                            claseExtraDescripcion += " noListView";
                        }
                        if (!Model.ViewSettings.MosaicView.ShowDescription)
                        {
                            claseExtraDescripcion += " noGridView";
                        }
                    }
                }
                        }

                        <div class="descripcionResumida @claseExtraDescripcion">
                            @if (!Html.GetComunidad().IsCatalog && !string.IsNullOrEmpty(Model.UrlPreview))
                            {
                                <p class="miniatura">
                                    <a href="@Model.CompletCardLink">
                                        <img title="@Model.Title" alt="@Model.Title" src="@Model.UrlPreview">
                                    </a>
                                </p>
                            }
                            @if (Model.ViewSettings == null || (!Model.MapView && (Model.ViewSettings.ListView.ShowDescription|| Model.ViewSettings.MosaicView.ShowDescription)) || (Model.MapView && Model.ViewSettings.MapView.ShowDescription))
                            {
                                if ((Model.Description.Contains("<p ") || Model.Description.Contains("<p>")) && Model.Description.Contains("</p>"))
                                {
                                @Html.Raw(Model.Description)
                                }
                                else
                                {
                                <p>
                                    @Html.Raw(Model.Description)
                                </p>
                                }
                            }
                        </div>
                        
                        @if (Model.ViewSettings != null)
                        {
                            if (!Model.MapView && !string.IsNullOrEmpty(Model.ViewSettings.ListView.InfoExtra))
                            {
                                var props = Model.ViewSettings.SemanticProperties;
                                List<Es.Riam.Gnoss.Web.MVC.Models.SemanticPropertieModel> imagenes = props.ContainsKey("schema:image")
                                ? props["schema:image"]
                                : null;
                            <div class="listado">
                                    @* --- Imagen videojuego--- *@
                                    @if (imagenes != null && imagenes.Count > 0)
                                    {
                                        <div>
                                            <img src="@imagenes.First().Name" alt="Imagen del juego" class="img-fluid imagen-juego">
                                        </div>
                                    }
                            </div>   
                            }
                            if (!Model.MapView && !string.IsNullOrEmpty(Model.ViewSettings.MosaicView.InfoExtra))
                            {
                            <div class="mosaico">
                                @Html.Raw(Model.ViewSettings.MosaicView.InfoExtra)
                            </div>   
                            }
                            if (Model.MapView && !string.IsNullOrEmpty(Model.ViewSettings.MapView.InfoExtra))
                            {
                            <div class="mapa">
                                @Html.Raw(Model.ViewSettings.MapView.InfoExtra)
                            </div>   
                            }
                        }
                    </div>
                    @if (Model.ViewSettings == null || (!Model.MapView && (Model.ViewSettings.ListView.ShowPublisher || Model.ViewSettings.MosaicView.ShowPublisher)) || (Model.MapView && Model.ViewSettings.MapView.ShowPublisher))
                    {
                        string claseExtra = "";
                        if (Model.ViewSettings != null)
                        {
                            if (!Model.ViewSettings.ListView.ShowPublisher)
                            {
                                claseExtra += " noListView";
                            }
                            if (!Model.ViewSettings.MosaicView.ShowPublisher)
                            {
                                claseExtra += " noGridView";
                            }
                        }
                        <div class="group utils-2 @claseExtra" >
                            <p>
                                @if (Model.TypePublication == ResourceModel.PublicationType.Published)
                                {
                                    @Html.GetText("BASERECURSOS", "PUBLICADOPORCUANDO", Model.PublishDate.Day.ToString(), Model.PublishDate.Month.ToString(), Model.PublishDate.Year.ToString())
                                }
                                else
                                {
                                    @Html.GetText("BASERECURSOS", "COMPARTIDOPORCUANDO", Model.PublishDate.Day.ToString(), Model.PublishDate.Month.ToString(), Model.PublishDate.Year.ToString())
                                }

                                @if (Model.Publisher.TypeProfile == ProfileType.Personal || Model.Publisher.TypeProfile == ProfileType.Teacher)
                                {
                                    <span><a property="foaf:name" typeof="foaf:Person" href="@Model.Publisher.UrlPerson">@Model.Publisher.NamePerson</a></span>
                                }
                                else if (Model.Publisher.TypeProfile == ProfileType.ProfessionalPersonal)
                                {
                                    <span><a property="foaf:name" typeof="foaf:Group" href="@Model.Publisher.UrlPerson">@Model.Publisher.NamePerson @ConstantesDeSeparacion.SEPARACION_CONCATENADOR @Model.Publisher.NameOrganization</a></span>
                                }
                                else if (Model.Publisher.TypeProfile == ProfileType.ProfessionalCorporate && !string.IsNullOrEmpty(Model.Publisher.NamePerson))
                                {
                                    string idTemp = Guid.NewGuid().ToString();
                                    <span><a property="foaf:name" typeof="foaf:Group" href="@Model.Publisher.UrlOrganization">@Model.Publisher.NameOrganization</a><span class="userAuthor"><span style="display:none;" id="@idTemp"> (@Model.Publisher.NamePerson) </span><a onclick="javascript:DesplegarImgMas(this, '@idTemp');" style="cursor:pointer;">
                                        <img src="@Html.GetBaseUrlStatic()/img/verMas.gif" alt="+"></a></span></span>
                                }
                                else
                                {
                                    <span><a property="foaf:name" typeof="foaf:Group" href="@Model.Publisher.UrlOrganization">@Model.Publisher.NameOrganization</a></span>
                                }
                            </p>
                        </div>
                    }
                    @if ((Model.ViewSettings == null || (!Model.MapView && (Model.ViewSettings.ListView.ShowCategories || Model.ViewSettings.MosaicView.ShowCategories)) || (Model.MapView && Model.ViewSettings.MapView.ShowCategories)) && Model.Categories != null && Model.Categories.Count() > 0)
                    {
                        string claseExtra = "";
                        if (Model.ViewSettings != null)
                        {
                            if (!Model.ViewSettings.ListView.ShowCategories)
                            {
                                claseExtra += " noListView";
                            }
                            if (!Model.ViewSettings.MosaicView.ShowCategories)
                            {
                                claseExtra += " noGridView";
                            }
                        }
                    
                        <div class="group categorias @claseExtra">
                            <p>
                                @Html.GetText("COMMON", "CATEGORIAS"):  
                            </p>
                            <ul id="listCat">
                                @{
                        int cont = 0;
                        foreach (CategoryModel categoria in Model.Categories)
                        {
                            string separador = "";
                            if (cont > 0) { separador = ", "; }
                                    <li>@separador<a href="@Model.UrlSearch/@Html.GetText("URLSEM", "CATEGORIA")/@Html.EliminarCaracteresUrlSem(categoria.Name)/@categoria.Key/"><span>@categoria.Name</span></a></li>
                            cont++;
                        }
                                }
                            </ul>
                        </div>  
                    }

                    @if ((Model.ViewSettings == null || (!Model.MapView && (Model.ViewSettings.ListView.ShowTags || Model.ViewSettings.MosaicView.ShowTags)) || (Model.MapView && Model.ViewSettings.MapView.ShowTags)) && Model.Tags != null && Model.Tags.Count() > 0)
                    {
                        string claseExtra = "";
                        if (Model.ViewSettings != null)
                        {
                            if (!Model.ViewSettings.ListView.ShowTags)
                            {
                                claseExtra += " noListView";
                            }
                            if (!Model.ViewSettings.MosaicView.ShowTags)
                            {
                                claseExtra += " noGridView";
                            }
                        }                    
                        <div class="group etiquetas @claseExtra">
                            <p>
                                @Html.GetText("COMMON", "ETIQUETAS"):
                            </p>
                            <ul class="listTags">
                                @{
                        int cont = 0;
                        foreach (string tag in Model.Tags)
                        {
                            string separador = "";
                            if (cont > 0) { separador = ", "; }
                                    
                                    <li>@separador<a resource="@Model.UrlSearch/@Html.GetText("URLSEM", "TAG")/@tag" rel="sioc:topic" href="@Model.UrlSearch/@Html.GetText("URLSEM", "TAG")/@tag"><span about="@Model.UrlSearch/@Html.GetText("URLSEM", "TAG")/@tag" property="dcterms:name" typeof="sioc_t:Tag">@tag</span></a></li>
                            cont++;
                        }
                                }
                            </ul>
                        </div>
                    }
                    <div id="accionesListado_@Model.Key.ToString()_@Guid.NewGuid()_@Html.GetComunidad().Key.ToString()" class="group acciones noGridView">
                    </div>
                    <div class="divContAccList"></div>
                </div>
            </div>
        </div>
    </div>
}


