@model ResourceModel


@*
Descripción
-----------------------------------------------
Vista que contiene la cabecera o header de un recurso en su correspondiente ficha. Se muestra en él:
- Imagen del autor del recurso
- Nombre del autor del recurso
- Info del recurso (Versionado, Publicado, Compartido)
- Nombre completo del autor del recurso
- Fecha del recurso

Variables
----------------------------------------------------------------
*@
@{
ProfileModel fichaPublicador = Model.Publisher;
ResourceModel FichaDocumento = Model;
// Información adicional del recurso (Versionado, Publicado, Compartido)
string classIconDocumentInfo = "";
// Nombre de la información adicional del recurso que se está visualizando (Versionado, Publicado, Compartido)
string nameDocumentInfo = "";
// Icono para recurso certificado (Por defecto 
string classIconDocumentCertification = "grading";
// Nombre de la certificación del recurso (si dispone)
string nameDocumentCertification = "";
// Tipo de icono dependiendo del tipo de recurso
string iconoTipoRecurso = "";
}

@*
----------------------------------------------------------------
-------------------- Información del publicador del recurso --------------------
*@


<div>
    @* Información de Versionado, Publicado por ... *@
    @if (fichaPublicador != null)
    {
        @* Versión del recurso *@
        if (Model.Version > 0)
        {
            /*@Html.GetText("COMMON", "VERSIONADO")*/
            nameDocumentInfo = @Html.GetText("COMMON", "VERSIONADO");
            classIconDocumentInfo = "content_paste";
        }
        @* Tipo de publicación del recurso (Compartido, Publicado) *@
        else if (Model.TypePublication == ResourceModel.PublicationType.Published)
        {
            /*@Html.GetText("COMMON", "PUBLICADO")*/
            nameDocumentInfo = @Html.GetText("COMMON", "PUBLICADO");
            classIconDocumentInfo = "local_library";
        }
        else
        {
            nameDocumentInfo = @Html.GetText("COMMON", "COMPARTIDO");
            classIconDocumentInfo = "share";
            /*@Html.GetText("COMMON", "COMPARTIDO")*/
        }

        @* Comprobación de recurso certificado - ¿Recurso certificado? *@
        if (FichaDocumento.Certification.Key != Guid.Empty)
        {
            nameDocumentCertification = @Html.GetText("PERFILBASERECURSOSFICHA", "RECURSOCERTIFICADO") + ": " + @Html.Raw(FichaDocumento.Certification.Value);
        }

        @* Tipo de icono del recurso *@         
        if (FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.FicheroServidor)
        {
            iconoTipoRecurso = "file_download";
        }
        else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Hipervinculo) {
            iconoTipoRecurso = "link";
        }
        else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Encuesta)
        {
            iconoTipoRecurso = "poll";
        } else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.FicheroServidor) {
            iconoTipoRecurso = "file_download";
        } else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Debate) {
            iconoTipoRecurso = "question_answer";
        } else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Imagen || FichaDocumento.TypeDocument == ResourceModel.DocumentType.ImagenWiki) {
            iconoTipoRecurso = "image";
        } else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Video || FichaDocumento.TypeDocument == ResourceModel.DocumentType.VideoTOP) {
            iconoTipoRecurso = "smart_display";
        } else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Audio || FichaDocumento.TypeDocument == ResourceModel.DocumentType.AudioTOP || FichaDocumento.TypeDocument == ResourceModel.DocumentType.AudioBrightcove) {
            iconoTipoRecurso = "volume_up";
        }
        else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Pregunta){
            iconoTipoRecurso = "contact_support";
        }
        else 
        {
            iconoTipoRecurso = "format_align_left";
        }    

        <div class="upper-wrap">
            <div class="user-miniatura">
                @* Imagen del publisher *@
                <div class="imagen-usuario-wrap">
                    <a href="@fichaPublicador.UrlPerson">
                        <div class="imagen @( string.IsNullOrEmpty(fichaPublicador.UrlFoto) ? "sinImagen" : null) ">
                            @if (fichaPublicador.UrlFoto != null)
                            {
                                <span style="background-image: url(@Html.GetBaseUrlContent()@fichaPublicador.UrlFoto);"></span>
                            }
                            else
                            {
                                <span class="material-icons">person</span>
                            }
                        </div>
                    </a>
                </div>

                @* Controlar el tipo de publicador del recurso (Teacher o Personal, Profesional) *@
                @* Tipo 1*@
                @if (fichaPublicador.TypeProfile == ProfileType.Personal || fichaPublicador.TypeProfile == ProfileType.Teacher)
                {
                    @* Texto del publisher *@
                    <div class="nombre-usuario-wrap">
                        <a href="@fichaPublicador.UrlPerson" typeof="foaf:Person" rel="sioc:has_creator">
                            @if (String.IsNullOrEmpty(@fichaPublicador.NameOrganization))
                            {
                                <p property="foaf:name" class="nombre">@fichaPublicador.NamePerson</p>
                                @*<p property="foaf:name" class="nombre-completo">@fichaPublicador.NamePerson · @fichaPublicador.NameOrganization</p>*@
                            }
                            else
                            {
                                <p property="foaf:name" class="nombre">@fichaPublicador.NamePerson</p>
                                @*<p property="foaf:name" class="nombre-completo">@fichaPublicador.NamePerson @ConstantesDeSeparacion.SEPARACION_CONCATENADOR @fichaPublicador.NameOrganization</p>*@
                            }
                        </a>
                    </div>

                }@* Tipo 2*@
                else if (fichaPublicador.TypeProfile == ProfileType.ProfessionalPersonal)
                {
                    @* Texto del publisher *@
                    <div class="nombre-usuario-wrap">
                        <a href="@fichaPublicador.UrlPerson" typeof="foaf:Person" rel="sioc:has_creator">
                            @if (String.IsNullOrEmpty(@fichaPublicador.NameOrganization))
                            {
                                <p property="foaf:name" class="nombre">@fichaPublicador.NamePerson</p>
                                @*<p property="foaf:name" class="nombre-completo">@fichaPublicador.NamePerson · @fichaPublicador.NameOrganization</p>*@
                            }
                            else
                            {
                                <p property="foaf:name" class="nombre">@fichaPublicador.NamePerson @ConstantesDeSeparacion.SEPARACION_CONCATENADOR @fichaPublicador.NameOrganization</p>
                                @*<p property="foaf:name" class="nombre-completo">@fichaPublicador.NamePerson @ConstantesDeSeparacion.SEPARACION_CONCATENADOR @fichaPublicador.NameOrganization</p>*@
                            }
                        </a>
                    </div>
                }@* Tipo 3*@
                else if (fichaPublicador.TypeProfile == ProfileType.ProfessionalCorporate && !string.IsNullOrEmpty(fichaPublicador.NamePerson))
                {
                    @* Texto del publisher *@
                    <div class="nombre-usuario-wrap">
                        <a href="@fichaPublicador.UrlOrganization" typeof="foaf:Group" rel="sioc:has_creator">
                            <p class="nombre">@fichaPublicador.NameOrganization</p>
                            @*<p property="foaf:name" class="nombre-completo">@fichaPublicador.NameOrganization</p>*@
                        </a>
                    </div>

                    @* Bloque del usuario de la corporación autor del recurso *@
                    <div id="userCorporateInfo" class="userCorporateInfo" style="display: flex">
                        <span onclick="javascript:DesplegarUserImgMasMVC(this, $(this).next());"
                              class="material-icons ml-2 mr-2">
                            person_search
                        </span>
                        @* Nombre del autor del recurso desde perfil corporación *@
                        <span class="userCorporateInfoAuthor d-none" property="foaf:name">
                            @fichaPublicador.NamePerson
                        </span>
                    </div>
                }
                else
                {
                    @* Texto del publisher *@
                    <div class="nombre-usuario-wrap">
                        <a href="@fichaPublicador.UrlOrganization" typeof="foaf:Group">
                            <p property="foaf:name" typeof="foaf:Group" class="nombre">@fichaPublicador.NameOrganization</p>
                            @* Ocultar en este caso el nombre completo ya que sería el mismo: - (MYG-83)
                    <p property="foaf:name" typeof="foaf:Group" class="nombre-completo">@fichaPublicador.NameOrganization</p>
                            *@
                        </a>
                    </div>
                }
            </div>

            @* Fecha publicación del recurso y características del recurso (Versionado, tipo...)*@
            <div class="d-flex align-items-start mb-2">
                @* Contenedor de información del documento: Versionado, Publicado, Compartido *@

                @* Recurso certificado 
                @if (!string.IsNullOrEmpty(nameDocumentCertification))
                {
                    <div class="d-flex align-items-center mr-2">
                        <span class="material-icons text-muted ml-2" title="@nameDocumentCertification">@classIconDocumentCertification</span>
                    </div>
                }*@
                @* Tipo de documento 
                <div class="d-flex align-items-center mr-2">
                    <span class="material-icons text-muted" title="@nameDocumentInfo">@classIconDocumentInfo</span>
                    <span class="text-muted ml-2 small">@nameDocumentInfo</span>
                </div>*@
                                
                @* Tipo de recurso
                <div class="d-flex align-items-center mr-3">
                    <span class="material-icons text-muted" title="@FichaDocumento.RdfTypeName">@iconoTipoRecurso</span>
                    <span class="text-muted ml-2 small">@FichaDocumento.RdfTypeName</span>
                </div>*@
                
                
                @*Fecha del recurso*@
                <div class="d-flex align-items-center">
                    <p class="fecha text-right text-muted" content="@FichaDocumento.PublishDate.ToString("yyyy-MM-ddTHH:mm:ss%K")" property="dcterms:created">@FichaDocumento.PublishDate.ToString("dd/MM/yyyy")</p>
                </div>
            </div>
        </div>
    }
    @* Mostrar información de versión. Si la versión del documento no es reciente *@
    @if (!FichaDocumento.LastVersion.Equals(FichaDocumento.Key))
    {
        <div role="alert" class="alert alert-warning mt-2 d-flex" id="noUltVer-info">
            <span class="material-icons mr-3">content_paste_off</span>
            <span>@Html.Raw(Html.GetText("PERFILBASERECURSOSFICHA", "NOULTIMAVERSION", Html.GetUrlPagina().Replace(FichaDocumento.Key.ToString(), FichaDocumento.LastVersion.ToString())))</span>
        </div>
    }

    @* Mostrar información de versión. Si la versión del documento no es reciente *@
    @if (FichaDocumento.EsEnlaceSharepoint && !FichaDocumento.EstaAlineadoConSharepoint)
    {
        <div role="alert" class="alert alert-warning mt-2 d-flex" id="noAlineadoSP-info">
            <span class="material-icons mr-3">content_paste_off</span>
            <span>@Html.Raw(Html.GetText("PERFILBASERECURSOSFICHA", "NOALINEADOSHAREPOINT"))</span>
        </div>
    }
</div>