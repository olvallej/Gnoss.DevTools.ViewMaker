@model ResourceViewModel

@*
Descripción
-----------------------------------------------
Vista que se utiliza para mostrar la categoria Tesauro en formato Lista.
Se trata de una vista parcial que se utiliza por ejemplo en vistas de "Categorizar" (_categories.cshtml)


Variables
----------------------------------------------------------------
*@
@{
ResourceModel fichaRecurso = Model.Resource;
}

@*
----------------------------------------------------------------
-------------------- Vista parcial de mostrar categorias Tesauro en modo Lista --------------------
*@

@* Listado de Categorías en formato "Lista" *@
<div class="tab-pane fade"
     id="ver-lista"
     role="tabpanel"
     aria-labelledby="ver-lista-tab">
    <div class="divTesLista divCategorias clearfix">
        @* Buscador-Filtrador de Categorías*@
        <div class="buscador-categorias">
            <div class="form-group">
                <input class="filtroRapido form-control not-outline"
                       placeholder="@Html.GetText("COMMON","BUSCAR")"
                       type="text"
                       onkeydown="javascript:if(event.which || event.keyCode){if ((event.which == 13) || (event.keyCode == 13)) {return false;}}"
                       onkeyup="javascript:MVCFiltrarListaSelCat(this, 'despAccionRec_@fichaRecurso.Key');" />                


            </div>
        </div>
        <div id="divSelCatLista">
        @* Cada Item de Categoría *@
            @foreach (CategoryModel categoria in Model.Categories.OrderBy(cat => cat.Name)) 
            { 
                @* Contenedor de la categoria en formato Lista *@
                <div class="categoria-wrap">
                    <div class="categoria @categoria.Key">
                    @{
                        string accionClick = "MVCMarcarElementoSelCat(this, 'despAccionRec_" + fichaRecurso.Key + "');";
                        string cadenaChecked = "";
                        string cadenaDisabled = "";
                        if (fichaRecurso.Categories != null && fichaRecurso.Categories.Count(cat => cat.Key == categoria.Key) > 0)
                        {
                            cadenaChecked = "checked=\"checked\"";
                            if (!Model.AllowEditCategories)
                            {
                                cadenaDisabled = "disabled=\"disabled\"";
                            }
                        }
                    }
                        @* Mostrar o pintar el input y el título de la categoría correspondiente*@
                        <div class="custom-control custom-checkbox themed little primary">
                            <input type="checkbox"
                                   id="list_@categoria.Key"
                                   onclick="@accionClick" @cadenaChecked @cadenaDisabled
                                   data-item="@categoria.Key"
                                   class="custom-control-input" />
                            <label class="custom-control-label"
                                   for="list_@categoria.Key">@categoria.Name</label>
                        </div>
                    </div> 
                </div>
            } 
         </div>
    </div>
</div>