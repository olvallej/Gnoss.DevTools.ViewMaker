@model PintarCategoriasFichaRecurso

@{
    ResourceModel fichaRecurso = Model.resourceView.Resource;
    @* Comprobar si dispone de hijos la categoría actual *@
    bool tieneHijos = ((List<CategoryModel>)Model.resourceView.Categories).Count(cat => cat.ParentCategoryKey == Model.categoryModel.Key) > 0;

    @* Hay subcategorías (Hijos): Pintar el + para desplegar *@
    if (tieneHijos)
    {
        //<img style="border-width:0px;margin-right:5px;cursor:pointer;" src="@Html.GetBaseUrlStatic()/img/verMas.gif" onclick="javascript:MVCDesplegarTreeView(this);" />
    }
    @* No Hay subcategorías (Hijos): No pintar para desplegar *@
    else
    {
        //<img style="border-width:0px;" src="@Html.GetBaseUrlStatic()/img/miniWhiteSpace.gif" />
    }
}
@* Mostrar o pintar la categoría*@
<div class="categoria-wrap">
    <div class="categoria @Model.categoryModel.Key">
        @{
            string accionClick = "MVCMarcarElementoSelCat(this, 'despAccionRec_" + fichaRecurso.Key + "');";
            string cadenaChecked = "";
            string cadenaDisabled = "";
            if (fichaRecurso.Categories != null && fichaRecurso.Categories.Count(cat => cat.Key == Model.categoryModel.Key) > 0)
            {
                cadenaChecked = "checked=\"checked\"";
                if (!Model.resourceView.AllowEditCategories)
                {
                    cadenaDisabled = "disabled=\"disabled\"";
                }
            }
        }
        @* Mostrar o pintar el input y el título de la categoría correspondiente*@
        <div class="custom-control custom-checkbox themed little primary">
            <input type="checkbox"
                   id="arb_@Model.categoryModel.Key"
                   onclick="@accionClick" @cadenaChecked @cadenaDisabled
                   data-item="@Model.categoryModel.Key"
                   class="custom-control-input" />
            <label class="custom-control-label"
                   for="arb_@Model.categoryModel.Key">@Model.categoryModel.Name</label>
            </div>
        </div>
        @if (tieneHijos)
        {
            @* Mostrar opción de desplegar si tiene hijos la categoría*@
            <div class="boton-desplegar">
                <span class="material-icons">keyboard_arrow_down</span>
            </div>
            @* Mostrar o no el panel de los hijos (subcategorías) si esta categoría dispone de subcategorías*@
            <div class="panHijos">
                @foreach (CategoryModel categoria in ((List<CategoryModel>)Model.resourceView.Categories).Where(cat => cat.ParentCategoryKey == Model.categoryModel.Key).OrderBy(cat => cat.Order))
                {
                    PintarCategoriasFichaRecurso pintar = new PintarCategoriasFichaRecurso();
                    pintar.resourceView = Model.resourceView;
                    pintar.categoryModel = categoria;
                    @Html.PartialView("../FichaRecurso/_PintarCategoria", pintar)
                }
            </div>
        }
    </div>
