@*
Descripción
-----------------------------------------------
Vista modal que servirá para enviar el recurso vía Newsletter pero a determinados grupos de la comunidad. En el modal aparecerá la opción del idioma en el que se desea realizar el envío de la newsletter.
Para ahorrar código, esta vista modal se cargará en un modal "padre" que es el "__resourece-modal-container"

Variables
----------------------------------------------------------------
*@
@{
    CommunityModel Comunidad = Html.GetComunidad();
    ResourceModel fichaRecurso = Model.Resource;
    HeaderModel cabecera = Html.GetCabecera();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    // Identidad de la Organización
    string identidadOrg = "";
    // Parametros para servicio autocompletar
    string idInpt_urlServicioAutocompletar = "inpt_urlServicioAutocompletar";
    // Método que se utilizará para el envío en autocomplete
    string metodoEnvio = "AutoCompletarGruposInvitaciones";
    // Controlar si es EcosistemasinMetaProyecto
    string isEcosistemaSinMetaProyecto = "false";
    // Comunidad privada o no para autocomplete
    string boolPrivada = "true";

    string urlSend = Html.GetUrlPagina();
    int position = urlSend.IndexOf("load-action");
    string newUrlSend = $"{urlSend.Substring(0,position)}send-newsletter-groups";
}

@* Control de la identidad para el servicio autocompletar*@
@if (IdentidadActual.KeyOrganization.HasValue)
{
    identidadOrg = IdentidadActual.KeyOrganization.Value.ToString();
}

@* Control de si es EcosistemasinMetaProyecto *@
@if (!Html.GetEsEcosistemaSinMetaProyecto()){
    isEcosistemaSinMetaProyecto = "true"; 
}

@* Control de si la comunidad es privada o no *@
@if (Comunidad.AccessType == CommunityModel.TypeAccessProject.Public || Comunidad.AccessType == CommunityModel.TypeAccessProject.Restricted)
{
    boolPrivada = "false";
}

@*
----------------------------------------------------------------
-------------------- Vista Modal enviar Recurso por Newsletter --------------------
*@
@* Título del modal*@
<div class="modal-header">
    <p class="modal-title">
        <span class="material-icons">email</span>@Html.GetText("PERFILBASERECURSOSFICHA", "ENVIARCORREOGRUPO")
    </p>
    <span class="material-icons cerrar"
          data-dismiss="modal"
          aria-label="Close">close</span>
</div>
@* Cuerpo del modal *@
<div class="modal-body">
    <div class="formulario-edicion">
        <div class="form-group mb-3">
            <label class="control-label d-block">@Html.GetText("INVITACIONES", "SELECCIONAGRUPOS")</label>
            <div class="input-wrap">
                <input type="text" class="form-control inputSelectGroups" id="txtFilterGroupsNewsletter" />
            </div>            
            <span class="tag-list mb-3" id="panGroupsContainerSendNewsletter"></span>            
        </div>
        <input type="hidden" id="txtHackGroupsSendNewsletter" value="">
        @*Checkbox con los diferentes idiomas *@
        <div class="form-group mb-3 chkBoxSelectLanguage mb-3">
            <label class="control-label d-block">@Html.GetText("PERFILBASERECURSOSFICHA", "PEGUNTAENVIARCORREOTODOSMIEMBROSGRUPOS")</label>
            @foreach (KeyValuePair<string, string> idioma in cabecera.Languajes)
            {
                
                <div class="form-check form-check-inline">
                    <input class="form-check-input rbSelectNewsletterLanguage" type="radio" name="@fichaRecurso.Key" id="@($"{fichaRecurso.Key}_{idioma.Key}")" data-language="@idioma.Key">
                    <label class="form-check-label" for="@($"{fichaRecurso.Key}_{idioma.Key}")">@idioma.Value</label>
                </div>
            }
        </div>

        @* Mensaje informativo del proceso*@
        <div id="despAccionRec_@fichaRecurso.Key">
            <div>
                <div id="menssages">
                    <div class="ok"></div>
                    <div class="ko"></div>
                </div>
            </div>
        </div>

        <div class="form-actions">
            @* Botón que guardará posibles cambios *@
            <button class="btn btn-primary" id="btnSendNewsletterToCommunityGroups">@Html.GetText("COMMON", "ENVIAR")</button>
        </div>        
    </div>
</div>

<script type="text/javascript">

    (function ($) {        
        const pParams = {  
            urlSend: "@newUrlSend",
            autocompleteParams: {
                identidad: "@IdentidadActual.KeyIdentity",
                identidadMyGnoss: "@IdentidadActual.KeyMetaProyectIdentity",
                identidadOrg: "@identidadOrg",
                proyecto: "@Comunidad.Key",
                idInpt_urlServicioAutocompletar: "@idInpt_urlServicioAutocompletar",
                metodo: "@metodoEnvio",
                isEcosistemasinMetaProyecto: @isEcosistemaSinMetaProyecto,
                esPrivada: @boolPrivada,
            }
        };         
        // Funcionamiento de la operativa
        operativaEnviarRecursoParticipantesGruposComunidad.init(pParams);
     })();
</script>
