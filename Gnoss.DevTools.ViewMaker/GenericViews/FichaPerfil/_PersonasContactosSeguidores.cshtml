@model ProfilePageViewModel
@*
Descripción
-----------------------------------------------
Vista principal que engloba las posibles subvistas para ver la información de un perfil de usuario de una comunidad.

Variables
----------------------------------------------------------------
*@
@{
@* Nº máximo de personas de organización que se visualizarán *@
int numMaxPersonasOrganizacion = 3;
// Controlar si dispone o no de fotografía el usuario
bool containsUrlFoto = true;
}

@*
    ----------------------------------------------------------------
    -------------------- Vista de Personas/Contactos/Seguidores de perfil de usuario u Organización --------------------
*@


@* Personas en Organización *@
@if (Model.PeopleInOrganization != null && Model.PeopleInOrganization.Count > 0)
{
    @* Lista de usuarios de comunidad *@
    <div class="wrapCol grupo-personas">
        <h2 class="section-title">@Html.GetText("COMMON", "PERSONAS")</h2>
        <div class="resource-list usuarios con-borde">
            @{
                int contadorPersonasOrganizacion = 0;                
                for (contadorPersonasOrganizacion = 0; contadorPersonasOrganizacion < Model.PeopleInOrganization.Count; contadorPersonasOrganizacion++)                
                {
                    ProfileModel perfil = Model.PeopleInOrganization[contadorPersonasOrganizacion];
                    if (contadorPersonasOrganizacion == numMaxPersonasOrganizacion)
                    {
                        break;
                    }

                    @* Controlar la imagen del usuario *@
                    if (string.IsNullOrEmpty(perfil.UrlFoto))
                    {
                        containsUrlFoto = false;
                    }
                    else {
                        containsUrlFoto = true;
                    }

                    @* Usuario / Perfil seguidor o miembro de comunidad *@
                    <article class="resource resource-grupo">
                        <div class="user-miniatura">
                            <div class="imagen-usuario-wrap">
                                @* Imagen del usuario *@
                                <a href="@perfil.UrlPerson">
                                    <div class="imagen @( (containsUrlFoto == false) ? "sinImagen" : null) ">
                                        @if (containsUrlFoto == false)
                                        {
                                            <span class="material-icons">person</span>
                                        }
                                        else
                                        {
                                            <span style="background-image: url(@Html.GetBaseUrlContent()@perfil.UrlFoto);"></span>
                                        }
                                    </div>
                                </a>
                            </div>
                            @* Nombre del usuario *@
                            <div class="nombre-usuario-wrap">
                                <a href="@perfil.UrlPerson">
                                    <p class="nombre">@perfil.NamePerson</p>
                                    @*<p class="nombre-completo">
                                        @perfil.NameOrganization
                                    </p>*@
                                </a>
                            </div>
                        </div>
                    </article>                    
                }

                @*Bloque de contactos ocultos *@                
                if (Model.PeopleInOrganization.Count > numMaxPersonasOrganizacion) { 
                    <div class="collapse listado-profileContacts-extra" id="js-profileContactsInOrganization">
                        @for (contadorPersonasOrganizacion = numMaxPersonasOrganizacion; contadorPersonasOrganizacion < Model.PeopleInOrganization.Count; contadorPersonasOrganizacion++)                                
                        {
                            ProfileModel perfil = Model.PeopleInOrganization[contadorPersonasOrganizacion];

                            @* Controlar la imagen del usuario *@
                            if (string.IsNullOrEmpty(perfil.UrlFoto))
                            {
                                containsUrlFoto = false;
                            }
                            else {
                                containsUrlFoto = true;
                            }

                            @* Usuario / Perfil seguidor o miembro de comunidad *@
                            <article class="resource resource-grupo">
                                <div class="user-miniatura">
                                    <div class="imagen-usuario-wrap">
                                        @* Imagen del usuario *@
                                        <a href="@perfil.UrlPerson">
                                            <div class="imagen @( (containsUrlFoto == false) ? "sinImagen" : null) ">
                                                @if (containsUrlFoto == false)
                                                {
                                                    <span class="material-icons">person</span>
                                                }
                                                else
                                                {
                                                    <span style="background-image: url(@Html.GetBaseUrlContent()@perfil.UrlFoto);"></span>
                                                }
                                            </div>
                                        </a>
                                    </div>
                                    @* Nombre del usuario *@
                                    <div class="nombre-usuario-wrap">
                                        <a href="@perfil.UrlPerson">
                                            <p class="nombre">@perfil.NamePerson</p>
                                            @*<p class="nombre-completo">
                                                @perfil.NameOrganization
                                            </p>*@
                                        </a>
                                    </div>
                                </div>
                            </article>                    
                        }
                    </div>
                }
            }

            @* Ver todos miembros de Organización*@
            <a class="ver-mas ver-mas-icono con-icono-after vertodos"
               data-toggle="collapse" 
               href="#js-profileContactsInOrganization" role="button" aria-expanded="false" aria-controls="js-profileContactsInOrganization"
               style="cursor: pointer"
               >
                @Html.GetText("COMMON", "VERTODOS")
            </a>
        </div>
    </div>
}

@* Contactos del Perfil (Perfil usuario) que le siguen *@
@if (Model.ProfileContacts != null && Model.ProfileContacts.Count > 0)
{
    @* Lista de usuarios de comunidad *@
    <div class="wrapCol grupo-personas">        
        <h2 class="section-title">@Html.GetText("PERFIL", "LESIGUEN", Model.NumProfileFollowers.ToString())</h2>
        <div class="resource-list usuarios con-borde">
            @{
                int contadorPersonas = 0;
                for (contadorPersonas = 0; contadorPersonas < Model.ProfileContacts.Count; contadorPersonas++)
                {
                    ProfileModel perfil = Model.ProfileContacts[contadorPersonas];
                    if (contadorPersonas == numMaxPersonasOrganizacion)
                    {
                        break;
                    }

                    @* Controlar la imagen del usuario *@
                    if (string.IsNullOrEmpty(perfil.UrlFoto))
                    {
                        containsUrlFoto = false;
                    }
                    else
                    {
                        containsUrlFoto = true;
                    }

                    @* Usuario / Perfil seguidor o miembro de comunidad *@
                    <article class="resource resource-grupo">
                        <div class="user-miniatura">
                            <div class="imagen-usuario-wrap">
                                @* Imagen del usuario *@
                                <a href="@perfil.UrlPerson">
                                    <div class="imagen @( (containsUrlFoto == false) ? "sinImagen" : null) ">
                                        @if (containsUrlFoto == false)
                                        {
                                            <span class="material-icons">person</span>
                                        }
                                        else
                                        {
                                            <span style="background-image: url(@Html.GetBaseUrlContent()@perfil.UrlFoto);"></span>
                                        }
                                    </div>
                                </a>
                            </div>
                            @* Nombre del usuario *@
                            <div class="nombre-usuario-wrap">
                                <a href="@perfil.UrlPerson">
                                    <p class="nombre">@perfil.NamePerson</p>
                                    @*<p class="nombre-completo">
                                        @perfil.NameOrganization
                                    </p>*@
                                </a>
                            </div>
                        </div>
                    </article>
                }

                @*Bloque de contactos ocultos *@
                if (Model.PeopleInOrganization != null && Model.PeopleInOrganization.Count > numMaxPersonasOrganizacion)
                {
                    <div class="collapse listado-profileContacts-extra" id="js-profileContacts">
                        @for (contadorPersonas = numMaxPersonasOrganizacion; contadorPersonas < Model.ProfileContacts.Count; contadorPersonas++)
                        {
                            ProfileModel perfil = Model.ProfileContacts[contadorPersonas];

                            @* Controlar la imagen del usuario *@
                            if (string.IsNullOrEmpty(perfil.UrlFoto))
                            {
                                containsUrlFoto = false;
                            }
                            else
                            {
                                containsUrlFoto = true;
                            }

                            @* Usuario / Perfil seguidor o miembro de comunidad *@
                            <article class="resource resource-grupo">
                                <div class="user-miniatura">
                                    <div class="imagen-usuario-wrap">
                                        @* Imagen del usuario *@
                                        <a href="@perfil.UrlPerson">
                                            <div class="imagen @( (containsUrlFoto == false) ? "sinImagen" : null) ">
                                                @if (containsUrlFoto == false)
                                                {
                                                    <span class="material-icons">person</span>
                                                }
                                                else
                                                {
                                                    <span style="background-image: url(@Html.GetBaseUrlContent()@perfil.UrlFoto);"></span>
                                                }
                                            </div>
                                        </a>
                                    </div>
                                    @* Nombre del usuario *@
                                    <div class="nombre-usuario-wrap">
                                        <a href="@perfil.UrlPerson">
                                            <p class="nombre">@perfil.NamePerson</p>
                                            @*<p class="nombre-completo">
                                                @perfil.NameOrganization
                                            </p>*@
                                        </a>
                                    </div>
                                </div>
                            </article>
                        }
                    </div>
                }
            }

            @* Ver todos miembros de Organización*@            
            <a class="ver-mas ver-mas-icono con-icono-after vertodos"
               data-toggle="collapse"
               href="#js-profileContacts" role="button" aria-expanded="false" aria-controls="js-profileContacts"
               style="cursor: pointer">
                @Html.GetText("COMMON", "VERTODOS")
            </a>
        </div>
    </div>
}


@* Contactos del Perfil a los que sigue (Perfil usuario) *@
@if (Model.ProfileFollowed != null && Model.ProfileFollowed.Count > 0) { 

    <div class="wrapCol grupo-personas">
        <h2 class="section-title">@Html.GetText("PERFIL", "SIGUE", Model.NumProfileFollowed.ToString())</h2>

        <div class="resource-list usuarios con-borde">
            @{
                int contadorPersonas = 0;
                for (contadorPersonas = 0; contadorPersonas < Model.ProfileFollowed.Count; contadorPersonas++)
                {
                    ProfileModel perfil = Model.ProfileFollowed[contadorPersonas];
                    if (contadorPersonas == numMaxPersonasOrganizacion)
                    {
                        break;
                    }

                    @* Controlar la imagen del usuario *@
                    if (string.IsNullOrEmpty(perfil.UrlFoto))
                    {
                        containsUrlFoto = false;
                    }
                    else
                    {
                        containsUrlFoto = true;
                    }

                    @* Usuario / Perfil seguidor o miembro de comunidad *@
                    <article class="resource resource-grupo">
                        <div class="user-miniatura">
                            <div class="imagen-usuario-wrap">
                                @* Imagen del usuario *@
                                <a href="@perfil.UrlPerson">
                                    <div class="imagen @( (containsUrlFoto == false) ? "sinImagen" : null) ">
                                        @if (containsUrlFoto == false)
                                        {
                                            <span class="material-icons">person</span>
                                        }
                                        else
                                        {
                                            <span style="background-image: url(@Html.GetBaseUrlContent()@perfil.UrlFoto);"></span>
                                        }
                                    </div>
                                </a>
                            </div>
                            @* Nombre del usuario *@
                            <div class="nombre-usuario-wrap">
                                <a href="@perfil.UrlPerson">
                                    <p class="nombre">@perfil.NamePerson</p>
                                    @*<p class="nombre-completo">
                                        @perfil.NameOrganization
                                    </p>*@
                                </a>
                            </div>
                        </div>
                    </article>
                }

                @*Bloque de contactos ocultos *@
                if (Model.ProfileFollowed.Count > numMaxPersonasOrganizacion)
                {
                    <div class="collapse listado-profileContactsFollowed-extra" id="js-profileContactsFollowed">
                        @for (contadorPersonas = numMaxPersonasOrganizacion; contadorPersonas < Model.ProfileFollowed.Count; contadorPersonas++)
                        {
                            ProfileModel perfil = Model.ProfileFollowed[contadorPersonas];

                            @* Controlar la imagen del usuario *@
                            if (string.IsNullOrEmpty(perfil.UrlFoto))
                            {
                                containsUrlFoto = false;
                            }
                            else
                            {
                                containsUrlFoto = true;
                            }

                            @* Usuario / Perfil seguidor o miembro de comunidad *@
                            <article class="resource resource-grupo">
                                <div class="user-miniatura">
                                    <div class="imagen-usuario-wrap">
                                        @* Imagen del usuario *@
                                        <a href="@perfil.UrlPerson">
                                            <div class="imagen @( (containsUrlFoto == false) ? "sinImagen" : null) ">
                                                @if (containsUrlFoto == false)
                                                {
                                                    <span class="material-icons">person</span>
                                                }
                                                else
                                                {
                                                    <span style="background-image: url(@Html.GetBaseUrlContent()@perfil.UrlFoto);"></span>
                                                }
                                            </div>
                                        </a>
                                    </div>
                                    @* Nombre del usuario *@
                                    <div class="nombre-usuario-wrap">
                                        <a href="@perfil.UrlPerson">
                                            <p class="nombre">@perfil.NamePerson</p>
                                            @*<p class="nombre-completo">
                                                @perfil.NameOrganization
                                            </p>*@
                                        </a>
                                    </div>
                                </div>
                            </article>
                        }
                    </div>
                }
            }

            @* Ver todos contactos que le siguen *@ 
            @if (Model.ProfileFollowed.Count > numMaxPersonasOrganizacion) { 
                <a class="ver-mas ver-mas-icono con-icono-after vertodos"
                    data-toggle="collapse"
                    href="#js-profileContactsFollowed" role="button" aria-expanded="false" aria-controls="js-profileContactsFollowed"
                    style="cursor: pointer">
                    @Html.GetText("COMMON", "VERTODOS")
                </a>
            }            
        </div>

    </div>
}


